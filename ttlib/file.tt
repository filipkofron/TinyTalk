| File |;
File = Object createWith:
{
	"new", [ :new |
		| res |;
		res = this getParent createWith: { "eof", False };
		res setParent: this;
		res
	],

	"openReadOnly:", [ :openReadOnly: |
		| file |;
		file = this new;
		FileIO openPath: openReadOnly mode: "rb" file: file;
		file
	],

	"openReadWrite:", [ :openReadWrite: |
        | file |;
        file = this new;
        FileIO openPath: openReadWrite mode: "wb+" file: file;
        file
    ],

    "openAppend:", [ :openAppend: |
        | file |;
        file = this new;
        FileIO openPath: openAppend mode: "ab+" file: file;
        file
    ],

	"close", [ :close |
		FileIO close: this;
		this
	],

	"read", [ :read |
		|val|;
		val = FileIO read: this;
		(val equals: -1)
			ifTrue: [eof = True];
		val
	],

	"readChar", [ :readChar |
		| int |;
		int = FileIO read: this;
		(int equals: -1)
			ifTrue: [eof = True; ""]
			ifFalse: [int charValue]
	],

	"readLine", [ :readLine |
		FileIO readLine: this
	],

	"eachLineDo:", [ :eachLineDo: |
		| fileThiz |;
		fileThiz = this;
		While
			isTrue: [fileThiz isEOF not]
			do: [
				eachLineDo value: (fileThiz readLine)
			];
		fileThiz
	],

	"write:", [ :write: |
		FileIO write: write file: this;
		this
	],

	"writeChar;", [ :write: |
		FileIO write: (write charAsIntAt: 0) file: this;
		this
	],

	"isEOF", [ :isEOF |
		eof
	],

	"isOK", [ :isOK |
		FileIO isOK: this;
		this
	]
}
