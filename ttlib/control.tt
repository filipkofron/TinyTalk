
// Initialize control structures


// True, False
| True False |;
True = (Object new);
False = (Object new);
Object inObject: True createField: "ifTrue:" withValue: [:ifTrue: | ifTrue value];
Object inObject: True createField: "ifFalse:" withValue: [:ifFalse: | nil];
Object inObject: True createField: "ifTrue:ifFalse:" withValue: [:ifTrue: :ifFalse:| ifTrue value];
Object inObject: True createField: "ifFalse:ifTrue:" withValue: [:ifFalse: :ifTrue:| ifTrue value];

Object inObject: False createField: "ifFalse:" withValue: [:ifFalse: | ifFalse value];
Object inObject: False createField: "ifTrue:" withValue: [:ifTrue: | nil];
Object inObject: False createField: "ifTrue:ifFalse:" withValue: [:ifTrue: :ifFalse:| ifFalse value];
Object inObject: False createField: "ifFalse:ifTrue:" withValue: [:ifFalse: :ifTrue:| ifFalse value];

True createField: "not" withValue: [ False ];
False createField: "not" withValue: [ True ];
True createField: "or:" withValue: [ :or: | True ];
True createField: "and:" withValue: [ :and: | and ];
False createField: "or:" withValue: [ :or: | or ];
False createField: "and:" withValue: [ :and: | False ];

True createField: "toString" withValue: [ "True" ];
False createField: "toString" withValue: [ "False" ];

// While

| While Loop |;
While = (Object new);
Loop = (Object new);

While createField: "toString" withValue: ["While"];

While
    createField: "isTrue:do:"
    withValue:
        [ :isTrue: :do: |
            | thisThis doFun |;

            thisThis = this;

            doFun = [ (isTrue value) ifTrue: [do value] ];

            // Do this multiple times so we lower the stack complexity ten times
            doFun value;
            doFun value;
            doFun value;
            doFun value;
            doFun value;
            doFun value;
            doFun value;
            doFun value;
            doFun value;
            doFun value;

            (isTrue value)
                ifTrue:
                 [
                    do value;
                    thisThis isTrue: isTrue do: do
                    ]
                ifFalse:
                 [ thisThis ]
         ];

While
    createField: "isTrue:doSafely:"
    withValue:
        [ :isTrue: :doSafely: |
            | thisThis doFun |;

            thisThis = this;

            doFun = [ (isTrue value) ifTrue: [doSafely value] ];

            // Do this multiple times so we lower the stack complexity ten times
            Loop repeat: doFun times: 8;

            (isTrue value)
                ifTrue: [ Loop repeat: doFun times: 32 ];

            (isTrue value)
                ifTrue: [ Loop repeat: doFun times: 256 ];

            (isTrue value)
                ifTrue: [ Loop repeat: doFun times: 1024 ];

            (isTrue value)
                ifTrue:
                 [
                    do value;
                    thisThis isTrue: isTrue doSafely: doSafely
                    ]
                ifFalse:
                 [ thisThis ]
         ];

Loop createField: "toString" withValue: ["Loop"];

Loop
    createField: "repeat:times:"
    withValue:
    [ :repeat: :times: |
        While
            isTrue: [ times greaterThan: 0 ]
            do: [ times = times minus: 1; repeat value ]
    ];

Array
    createField: "do:"
    withValue:
        [ :do: |
            |i thisArray |;
            i = 0;
            thisArray = this;
            While
                isTrue:
                    [i lessThan: (thisArray size)]
                do:
                    [
                        do
                            value: (thisArray at: i);
                        i = i add: 1
                    ]
        ];

Object
    createField: "createWith:"
    withValue:
        [ :createWith: |
            | first object name |;
            first = True;
            object = this new;
            createWith
                do:
                    [ :item: |
                        first
                            ifTrue: [name = item];
                        first
                            ifFalse:
                                [
                                    object
                                        createField: name
                                        withValue: item
                                ];
                        first = first not
                    ];
            object
        ]
